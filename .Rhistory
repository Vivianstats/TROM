sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
print("check")
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
for(tt in tissues[-(1:3)]){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print("check")
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
print("check")
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
for(tt in tissues[-(1:3)]){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
print("check")
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
tt = tissues[4]
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab
sps = list.files(paste0(dir, tt, "/"))
sps
tt
for(tt in tissues[-(1:3)]){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
print("check")
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
tt = "Digestive"
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
library(ggplot2);  theme_set(theme_bw())
library(pheatmap)
library(tidyr)
options(stringsAsFactors = FALSE)
tissues = c("Blood-Tcell", "Brain", "Digestive",
"Epithelial", "ES-deriv", "ESC",
"Heart", "HSC-Bcell", "iPSC",
"Mesench", "Muscle", "SmMuscle")
# sample.list = vector("list", length = 12)
# names(sample.list) = tissues
# sample.list[["Blood-Tcell"]] = c()
### DO enrichment --------------------------------------------------------
dir = "~/Dropbox/Collaboration/2019cage/codes/GO/"
pdir = "~/Dropbox/Collaboration/2019cage/codes/GOplots/"
pthre = 0.15
for(tt in tissues){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
tt = tissues[1]
tt
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
p2
plot(1:3, 1:3)
str_len
nchar(labels[3])
labels[3]
labels[5]
labels[90]
nchar(labels[90])
labels = stringr::str_trunc(labels, 65)
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
dir = "~/Dropbox/Collaboration/2019cage/codes/GO/"
pdir = "~/Dropbox/Collaboration/2019cage/codes/GOplots/"
pthre = 0.1
for(tt in tissues){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels = stringr::str_trunc(labels, 65)
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
for(tt in tissues){
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels = stringr::str_trunc(labels, 65)
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 7,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
}
tt = "iPSC"
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
tables[[1]]
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
tab
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels = stringr::str_trunc(labels, 65)
dev.off()
p1
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels = stringr::str_trunc(labels, 65)
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 7,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 7,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
tabs
tab2
labels
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels
rownames(tab2)
ids[,1]
ids = tab[, c(1,3)]
ids
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids
ids = ids[-which(duplicated(ids[,1])), ]
ids
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
if(sum(duplicated(ids[,1]))>0){ids = ids[-which(duplicated(ids[,1])), ]}
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
labels = stringr::str_trunc(labels, 65)
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 7,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
k = 789
k = 78
if(k < 10){ kid = paste0("00",k) }
if(k >= 10 & kid < 100){ kid = paste0("0", k) }
if(k >= 100){kid = k}
fi = paste0("~/Dropbox/Collaboration/2019cage/data/associated_element.roadmap.promoter.activity_pruning/associated_element.roadmap.promoter.activity_pruning.E",
kid, ".txt")
set = readLines(fi)
set.ens = sapply(strsplit(set, split = ";"), function(x) x[[1]])
set.ens = sapply(strsplit(set.ens, split = "\\."), function(x) x[1])
set.ens
getwd()
writeLines(  set.ens, file = "gene3.txt")
fileConn<-file("gene3.txt")
writeLines(set.ens, fileConn)
close(fileConn)
library(ggplot2);  theme_set(theme_bw())
library(pheatmap)
library(tidyr)
options(stringsAsFactors = FALSE)
tissues = c("Blood-Tcell", "Brain", "Digestive",
"Epithelial", "ES-deriv", "ESC",
"Heart", "HSC-Bcell", "iPSC",
"Mesench", "Muscle", "SmMuscle")
### DO enrichment --------------------------------------------------------
dir = "~/Dropbox/Collaboration/2019cage/codes/DO/"
pdir = "~/Dropbox/Collaboration/2019cage/codes/DOplots/"
pthre = 0.15
tt = "Blood-Tcell"
sps = list.files(paste0(dir, tt, "/"))
sps = sapply(strsplit(sps, split = "\\."), function(x) x[1])
tables = lapply(sps, function(s){
mt = read.table(paste0(dir, tt, "/", s, ".txt"), sep = "\t", header = TRUE, quote="\"")
mt = mt[, c(1,3,4)]
mt = mt[mt$p.adjust <= pthre, ]
if(nrow(mt) == 0) return(NULL)
mt$sample = s
return(mt)
})
print("check")
tab = Reduce(rbind, tables)
ids = tab[, c(1,3)]
ids = ids[-which(duplicated(ids[,1])), ]
tab = tab[,c(1,2,4)]
print(class(tab))
tab = tidyr::spread(data = tab, key = ID, value = p.adjust)
rownames(tab) = tab$sample; tab = tab[,-1]
tab[is.na(tab)] = 1
p1 = pheatmap(mat = t(tab), cluster_rows = TRUE, cluster_cols = TRUE,
treeheight_col = 0, treeheight_row = 0)
col_order = p1$tree_col$order
row_order = p1$tree_row$order
tab[tab == 1] = NA
tab2 = t(tab)[row_order, col_order]
labels = ids[match(rownames(tab2), ids[,1]), 2]
pdf(paste0(pdir, tt, "-15.pdf"), width = 6, height = 9, onefile = FALSE)
p2 = pheatmap(mat = tab2, cluster_rows = FALSE, cluster_cols = FALSE,
border_color = NA, labels_row = labels, fontsize_col = 8,fontsize_row = 8,
color = colorRampPalette(rev(brewer.pal(n = 7, name = "GnBu")))(100))
dev.off()
show_col(c("#CC0C00", "#5C88DA",
"#FFB200", "#84BD00",
"#F2799F", "#48A1AB",
"#AB6CD8", "#ED6A5A",
"#7C878E"
))
library(scales)
show_col(c("#CC0C00", "#5C88DA",
"#FFB200", "#84BD00",
"#F2799F", "#48A1AB",
"#AB6CD8", "#ED6A5A",
"#7C878E"
))
dev.off()
show_col(c("#CC0C00", "#5C88DA",
"#FFB200", "#84BD00",
"#F2799F", "#48A1AB",
"#AB6CD8", "#ED6A5A",
"#7C878E"
))
